name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    if: ${{ !contains(github.event.pull_request.title, 'Update Chart image version') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

  test:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Restore Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run tests
        env:
          SECRET_KEY: "dummysecret"
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Restore Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run build
        run: npm run build

  build-and-publish:
    # This job will run only when event is a merge, push tag or disptach workflow
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch' || ( github.event_name == 'push' && github.github.head_ref == 'main' )
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Restore Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run build
        run: npm run build

      - name: Build the Docker image
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.ref }}" ]; then
            TAG=${{ github.ref }}
            TAG=${TAG#refs/tags/}
          else
            TAG=${{ github.sha }}
          fi
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-auth-app:$TAG .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push the Docker image
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.ref }}" ]; then
            TAG=${{ github.ref }}
            TAG=${TAG#refs/tags/}
          else
            TAG=${{ github.sha }}
          fi
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-auth-app:$TAG
      - name: Tag the Docker image with 'latest'
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.ref }}" ]; then
            TAG=${{ github.ref }}
            TAG=${TAG#refs/tags/}
          else
            TAG=${{ github.sha }}
          fi
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-auth-app:$TAG ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-auth-app:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nodejs-auth-app:latest

      - name: Update Helm Chart values
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.ref }}" ]; then
            TAG=${{ github.ref }}
            TAG=${TAG#refs/tags/}
            sed -i "s/tag: .*/tag: \"$TAG\"/" charts/nodejs-auth-app/values-prod.yaml
          else
            TAG=${{ github.sha }}
            sed -i "s/tag: .*/tag: \"$TAG\"/" charts/nodejs-auth-app/values-dev.yaml
          fi
      - name: Create Helm Chart Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update Chart image version
          title: Update Chart image version
          body: |
            This PR updates the image tag in the Helm Chart values file.
          branch: update-chart-image-version-$TAG
          base: main
          labels: helm-chart
          reviewers: jamorosoa
          assignees: jamorosoa
          draft: false
          signoff: true
